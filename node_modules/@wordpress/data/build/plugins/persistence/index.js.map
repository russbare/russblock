{"version":3,"sources":["@wordpress/data/src/plugins/persistence/index.js"],"names":["DEFAULT_STORAGE","defaultStorage","DEFAULT_STORAGE_KEY","withLazySameState","reducer","state","action","nextState","createPersistenceInterface","options","storage","storageKey","data","get","undefined","persisted","getItem","JSON","parse","error","set","key","value","setItem","stringify","persistencePlugin","registry","pluginOptions","persistence","createPersistOnChange","getState","reducerKey","keys","getPersistedState","Array","isArray","reducers","reduce","result","Object","assign","lastState","registerStore","persist","persistedState","initialState","type","store","dispatch","__unstableMigrate","coreEditorState","preferences","insertUsage","blockEditorState"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { flow, merge, isPlainObject, omit } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport defaultStorage from './storage/default';\nimport { combineReducers } from '../../';\n\n/**\n * Persistence plugin options.\n *\n * @property {Storage} storage    Persistent storage implementation. This must\n *                                at least implement `getItem` and `setItem` of\n *                                the Web Storage API.\n * @property {string}  storageKey Key on which to set in persistent storage.\n *\n * @typedef {WPDataPersistencePluginOptions}\n */\n\n/**\n * Default plugin storage.\n *\n * @type {Storage}\n */\nconst DEFAULT_STORAGE = defaultStorage;\n\n/**\n * Default plugin storage key.\n *\n * @type {string}\n */\nconst DEFAULT_STORAGE_KEY = 'WP_DATA';\n\n/**\n * Higher-order reducer which invokes the original reducer only if state is\n * inequal from that of the action's `nextState` property, otherwise returning\n * the original state reference.\n *\n * @param {Function} reducer Original reducer.\n *\n * @return {Function} Enhanced reducer.\n */\nexport const withLazySameState = ( reducer ) => ( state, action ) => {\n\tif ( action.nextState === state ) {\n\t\treturn state;\n\t}\n\n\treturn reducer( state, action );\n};\n\n/**\n * Creates a persistence interface, exposing getter and setter methods (`get`\n * and `set` respectively).\n *\n * @param {WPDataPersistencePluginOptions} options Plugin options.\n *\n * @return {Object} Persistence interface.\n */\nexport function createPersistenceInterface( options ) {\n\tconst {\n\t\tstorage = DEFAULT_STORAGE,\n\t\tstorageKey = DEFAULT_STORAGE_KEY,\n\t} = options;\n\n\tlet data;\n\n\t/**\n\t * Returns the persisted data as an object, defaulting to an empty object.\n\t *\n\t * @return {Object} Persisted data.\n\t */\n\tfunction get() {\n\t\tif ( data === undefined ) {\n\t\t\t// If unset, getItem is expected to return null. Fall back to\n\t\t\t// empty object.\n\t\t\tconst persisted = storage.getItem( storageKey );\n\t\t\tif ( persisted === null ) {\n\t\t\t\tdata = {};\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tdata = JSON.parse( persisted );\n\t\t\t\t} catch ( error ) {\n\t\t\t\t\t// Similarly, should any error be thrown during parse of\n\t\t\t\t\t// the string (malformed JSON), fall back to empty object.\n\t\t\t\t\tdata = {};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * Merges an updated reducer state into the persisted data.\n\t *\n\t * @param {string} key   Key to update.\n\t * @param {*}      value Updated value.\n\t */\n\tfunction set( key, value ) {\n\t\tdata = { ...data, [ key ]: value };\n\t\tstorage.setItem( storageKey, JSON.stringify( data ) );\n\t}\n\n\treturn { get, set };\n}\n\n/**\n * Data plugin to persist store state into a single storage key.\n *\n * @param {WPDataRegistry}                  registry      Data registry.\n * @param {?WPDataPersistencePluginOptions} pluginOptions Plugin options.\n *\n * @return {WPDataPlugin} Data plugin.\n */\nconst persistencePlugin = function( registry, pluginOptions ) {\n\tconst persistence = createPersistenceInterface( pluginOptions );\n\n\t/**\n\t * Creates an enhanced store dispatch function, triggering the state of the\n\t * given reducer key to be persisted when changed.\n\t *\n\t * @param {Function}       getState   Function which returns current state.\n\t * @param {string}         reducerKey Reducer key.\n\t * @param {?Array<string>} keys       Optional subset of keys to save.\n\t *\n\t * @return {Function} Enhanced dispatch function.\n\t */\n\tfunction createPersistOnChange( getState, reducerKey, keys ) {\n\t\tlet getPersistedState;\n\t\tif ( Array.isArray( keys ) ) {\n\t\t\t// Given keys, the persisted state should by produced as an object\n\t\t\t// of the subset of keys. This implementation uses combineReducers\n\t\t\t// to leverage its behavior of returning the same object when none\n\t\t\t// of the property values changes. This allows a strict reference\n\t\t\t// equality to bypass a persistence set on an unchanging state.\n\t\t\tconst reducers = keys.reduce( ( result, key ) => Object.assign( result, {\n\t\t\t\t[ key ]: ( state, action ) => action.nextState[ key ],\n\t\t\t} ), {} );\n\n\t\t\tgetPersistedState = withLazySameState( combineReducers( reducers ) );\n\t\t} else {\n\t\t\tgetPersistedState = ( state, action ) => action.nextState;\n\t\t}\n\n\t\tlet lastState = getPersistedState( undefined, { nextState: getState() } );\n\n\t\treturn ( result ) => {\n\t\t\tconst state = getPersistedState( lastState, { nextState: getState() } );\n\t\t\tif ( state !== lastState ) {\n\t\t\t\tpersistence.set( reducerKey, state );\n\t\t\t\tlastState = state;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\treturn {\n\t\tregisterStore( reducerKey, options ) {\n\t\t\tif ( ! options.persist ) {\n\t\t\t\treturn registry.registerStore( reducerKey, options );\n\t\t\t}\n\n\t\t\t// Load from persistence to use as initial state.\n\t\t\tconst persistedState = persistence.get()[ reducerKey ];\n\t\t\tif ( persistedState !== undefined ) {\n\t\t\t\tlet initialState = options.reducer( undefined, {\n\t\t\t\t\ttype: '@@WP/PERSISTENCE_RESTORE',\n\t\t\t\t} );\n\n\t\t\t\tif ( isPlainObject( initialState ) && isPlainObject( persistedState ) ) {\n\t\t\t\t\t// If state is an object, ensure that:\n\t\t\t\t\t// - Other keys are left intact when persisting only a\n\t\t\t\t\t//   subset of keys.\n\t\t\t\t\t// - New keys in what would otherwise be used as initial\n\t\t\t\t\t//   state are deeply merged as base for persisted value.\n\t\t\t\t\tinitialState = merge( {}, initialState, persistedState );\n\t\t\t\t} else {\n\t\t\t\t\t// If there is a mismatch in object-likeness of default\n\t\t\t\t\t// initial or persisted state, defer to persisted value.\n\t\t\t\t\tinitialState = persistedState;\n\t\t\t\t}\n\n\t\t\t\toptions = { ...options, initialState };\n\t\t\t}\n\n\t\t\tconst store = registry.registerStore( reducerKey, options );\n\n\t\t\tstore.dispatch = flow( [\n\t\t\t\tstore.dispatch,\n\t\t\t\tcreatePersistOnChange(\n\t\t\t\t\tstore.getState,\n\t\t\t\t\treducerKey,\n\t\t\t\t\toptions.persist\n\t\t\t\t),\n\t\t\t] );\n\n\t\t\treturn store;\n\t\t},\n\t};\n};\n\n/**\n * Deprecated: Remove this function once WordPress 5.3 is released.\n */\n\npersistencePlugin.__unstableMigrate = ( pluginOptions ) => {\n\tconst persistence = createPersistenceInterface( pluginOptions );\n\n\t// Preferences migration to introduce the block editor module\n\tconst persistedState = persistence.get();\n\tconst coreEditorState = persistedState[ 'core/editor' ];\n\tif ( coreEditorState && coreEditorState.preferences && coreEditorState.preferences.insertUsage ) {\n\t\tconst blockEditorState = {\n\t\t\tpreferences: {\n\t\t\t\tinsertUsage: coreEditorState.preferences.insertUsage,\n\t\t\t},\n\t\t};\n\n\t\tpersistence.set( 'core/editor', {\n\t\t\t...coreEditorState,\n\t\t\tpreferences: omit( coreEditorState.preferences, [ 'insertUsage' ] ),\n\t\t} );\n\t\tpersistence.set( 'core/block-editor', blockEditorState );\n\t}\n};\n\nexport default persistencePlugin;\n"]}