{"version":3,"sources":["@wordpress/data/src/index.js"],"names":["combineReducers","defaultRegistry","plugins","default","withSelect","withDispatch","withRegistry","RegistryProvider","RegistryConsumer","__experimentalAsyncModeProvider","createRegistry","createRegistrySelector","createRegistryControl","select","dispatch","subscribe","registerGenericStore","registerStore","use"],"mappings":"AAAA;;;AAGA,OAAOA,eAAP,MAA4B,wBAA5B;AAEA;;;;AAGA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB;AAEA,SAASC,OAAO,IAAIC,UAApB,QAAsC,0BAAtC;AACA,SAASD,OAAO,IAAIE,YAApB,QAAwC,4BAAxC;AACA,SAASF,OAAO,IAAIG,YAApB,QAAwC,4BAAxC;AACA,SAASH,OAAO,IAAII,gBAApB,EAAsCC,gBAAtC,QAA8D,gCAA9D;AACA,SAASL,OAAO,IAAIM,+BAApB,QAA2D,kCAA3D;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASR,OAAT;AACA,SAASS,sBAAT,EAAiCC,qBAAjC,QAA8D,WAA9D;AAEA;;;;;;;;;;;AAUA,SAASZ,eAAT;AAEA,OAAO,IAAMa,MAAM,GAAGZ,eAAe,CAACY,MAA/B;AACP,OAAO,IAAMC,QAAQ,GAAGb,eAAe,CAACa,QAAjC;AACP,OAAO,IAAMC,SAAS,GAAGd,eAAe,CAACc,SAAlC;AACP,OAAO,IAAMC,oBAAoB,GAAGf,eAAe,CAACe,oBAA7C;AACP,OAAO,IAAMC,aAAa,GAAGhB,eAAe,CAACgB,aAAtC;AACP,OAAO,IAAMC,GAAG,GAAGjB,eAAe,CAACiB,GAA5B","sourcesContent":["/**\n * External dependencies\n */\nimport combineReducers from 'turbo-combine-reducers';\n\n/**\n * Internal dependencies\n */\nimport defaultRegistry from './default-registry';\nimport * as plugins from './plugins';\n\nexport { default as withSelect } from './components/with-select';\nexport { default as withDispatch } from './components/with-dispatch';\nexport { default as withRegistry } from './components/with-registry';\nexport { default as RegistryProvider, RegistryConsumer } from './components/registry-provider';\nexport { default as __experimentalAsyncModeProvider } from './components/async-mode-provider';\nexport { createRegistry } from './registry';\nexport { plugins };\nexport { createRegistrySelector, createRegistryControl } from './factory';\n\n/**\n * The combineReducers helper function turns an object whose values are different\n * reducing functions into a single reducing function you can pass to registerReducer.\n *\n * @param {Object} reducers An object whose values correspond to different reducing\n *                          functions that need to be combined into one.\n *\n * @return {Function}       A reducer that invokes every reducer inside the reducers\n *                          object, and constructs a state object with the same shape.\n */\nexport { combineReducers };\n\nexport const select = defaultRegistry.select;\nexport const dispatch = defaultRegistry.dispatch;\nexport const subscribe = defaultRegistry.subscribe;\nexport const registerGenericStore = defaultRegistry.registerGenericStore;\nexport const registerStore = defaultRegistry.registerStore;\nexport const use = defaultRegistry.use;\n"]}