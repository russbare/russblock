{"version":3,"sources":["@wordpress/components/src/keyboard-shortcuts/index.js"],"names":["Mousetrap","forEach","Component","Children","KeyboardShortcuts","arguments","bindKeyTarget","bind","keyTarget","document","mousetrap","props","shortcuts","callback","key","process","env","NODE_ENV","keys","split","modifiers","Set","filter","value","length","hasAlt","has","hasShift","size","Error","bindGlobal","eventName","bindFn","reset","node","children","count"],"mappings":";;;;;;;;AAAA;;;AAGA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAO,qDAAP;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA;;;;AAGA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,oBAApC;;IAEMC,iB;;;;;AACL,+BAAc;AAAA;;AAAA;;AACb,4FAAUC,SAAV;AAEA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AAHa;AAIb;;;;wCAEmB;AAAA;;AAAA,4BACc,IADd,CACXC,SADW;AAAA,UACXA,SADW,gCACCC,QADD;AAGnB,WAAKC,SAAL,GAAiB,IAAIV,SAAJ,CAAeQ,SAAf,CAAjB;AAEAP,MAAAA,OAAO,CAAE,KAAKU,KAAL,CAAWC,SAAb,EAAwB,UAAEC,QAAF,EAAYC,GAAZ,EAAqB;AACnD,YAAKC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA9B,EAA8C;AAC7C,cAAMC,IAAI,GAAGJ,GAAG,CAACK,KAAJ,CAAW,GAAX,CAAb;AACA,cAAMC,SAAS,GAAG,IAAIC,GAAJ,CAASH,IAAI,CAACI,MAAL,CAAa,UAAEC,KAAF;AAAA,mBAAaA,KAAK,CAACC,MAAN,GAAe,CAA5B;AAAA,WAAb,CAAT,CAAlB;AACA,cAAMC,MAAM,GAAGL,SAAS,CAACM,GAAV,CAAe,KAAf,CAAf;AACA,cAAMC,QAAQ,GAAGP,SAAS,CAACM,GAAV,CAAe,OAAf,CAAjB;;AAEA,cACGN,SAAS,CAACQ,IAAV,KAAmB,CAAnB,IAAwBH,MAA1B,IACEL,SAAS,CAACQ,IAAV,KAAmB,CAAnB,IAAwBH,MAAxB,IAAkCE,QAFrC,EAGE;AACD,kBAAM,IAAIE,KAAJ,uBAA2Bf,GAA3B,qEAAN;AACA;AACD;;AAbkD,2BAejB,MAAI,CAACH,KAfY;AAAA,YAe3CmB,UAf2C,gBAe3CA,UAf2C;AAAA,YAe/BC,SAf+B,gBAe/BA,SAf+B;AAgBnD,YAAMC,MAAM,GAAGF,UAAU,GAAG,YAAH,GAAkB,MAA3C;;AACA,QAAA,MAAI,CAACpB,SAAL,CAAgBsB,MAAhB,EAA0BlB,GAA1B,EAA+BD,QAA/B,EAAyCkB,SAAzC;AACA,OAlBM,CAAP;AAmBA;;;2CAEsB;AACtB,WAAKrB,SAAL,CAAeuB,KAAf;AACA;AAED;;;;;;;;;kCAMeC,I,EAAO;AACrB,WAAK1B,SAAL,GAAiB0B,IAAjB;AACA;;;6BAEQ;AACR;AACA;AAFQ,UAGAC,QAHA,GAGa,KAAKxB,KAHlB,CAGAwB,QAHA;;AAIR,UAAK,CAAEhC,QAAQ,CAACiC,KAAT,CAAgBD,QAAhB,CAAP,EAAoC;AACnC,eAAO,IAAP;AACA;;AAED,aAAO;AAAK,QAAA,GAAG,EAAG,KAAK7B;AAAhB,SAAkC6B,QAAlC,CAAP;AACA;;;;EAxD8BjC,S;;AA2DhC,eAAeE,iBAAf","sourcesContent":["/**\n * External dependencies\n */\nimport Mousetrap from 'mousetrap';\nimport 'mousetrap/plugins/global-bind/mousetrap-global-bind';\nimport { forEach } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, Children } from '@wordpress/element';\n\nclass KeyboardShortcuts extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.bindKeyTarget = this.bindKeyTarget.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { keyTarget = document } = this;\n\n\t\tthis.mousetrap = new Mousetrap( keyTarget );\n\n\t\tforEach( this.props.shortcuts, ( callback, key ) => {\n\t\t\tif ( process.env.NODE_ENV === 'development' ) {\n\t\t\t\tconst keys = key.split( '+' );\n\t\t\t\tconst modifiers = new Set( keys.filter( ( value ) => value.length > 1 ) );\n\t\t\t\tconst hasAlt = modifiers.has( 'alt' );\n\t\t\t\tconst hasShift = modifiers.has( 'shift' );\n\n\t\t\t\tif (\n\t\t\t\t\t( modifiers.size === 1 && hasAlt ) ||\n\t\t\t\t\t( modifiers.size === 2 && hasAlt && hasShift )\n\t\t\t\t) {\n\t\t\t\t\tthrow new Error( `Cannot bind ${ key }. Alt and Shift+Alt modifiers are reserved for character input.` );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst { bindGlobal, eventName } = this.props;\n\t\t\tconst bindFn = bindGlobal ? 'bindGlobal' : 'bind';\n\t\t\tthis.mousetrap[ bindFn ]( key, callback, eventName );\n\t\t} );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.mousetrap.reset();\n\t}\n\n\t/**\n\t * When rendering with children, binds the wrapper node on which events\n\t * will be bound.\n\t *\n\t * @param {Element} node Key event target.\n\t */\n\tbindKeyTarget( node ) {\n\t\tthis.keyTarget = node;\n\t}\n\n\trender() {\n\t\t// Render as non-visual if there are no children pressed. Keyboard\n\t\t// events will be bound to the document instead.\n\t\tconst { children } = this.props;\n\t\tif ( ! Children.count( children ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn <div ref={ this.bindKeyTarget }>{ children }</div>;\n\t}\n}\n\nexport default KeyboardShortcuts;\n"]}